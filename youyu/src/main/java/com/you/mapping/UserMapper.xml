<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.you.dao.UserDao" >
  <resultMap id="BaseResultMap" type="com.you.bean.User" >
    <result column="id" property="id" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="age" property="age" jdbcType="INTEGER" />
  </resultMap>
  <!--  
  <resultMap id="userMap" type="com.you.bean.User">  
        <result column="id" property="id" jdbcType="INTEGER"/>  
        <result column="name" property="name" jdbcType="VARCHAR"/>  
        <result column="password" property="password" jdbcType="VARCHAR"/>
        <result column="age" property="age" jdbcType="INTEGER"/>   
        <collection property="money" javaType="java.util.List" ofType="com.you.bean.Money">  
            <result column="money" property="money" jdbcType="VARCHAR" />  
        </collection>  
    </resultMap>  
  -->
    <!-- resultMap中的type表示返回什么类型的对象 -->
    <resultMap type="com.you.bean.User" id="userMap">
        <result column="id" property="id" jdbcType="INTEGER"/>  
        <result column="name" property="name" jdbcType="VARCHAR"/>  
        <result column="password" property="password" jdbcType="VARCHAR"/>
        <result column="age" property="age" jdbcType="INTEGER"/>   
        <!-- association字面意思关联，这里只专门做一对一关联； property表示是com.mybatis.bean.StudentTemp中的属性名称； 
            javaType表示该属性是什么类型对象 -->
        <association property="money2" javaType="com.you.bean.Money" >
            <!-- property 表示com.mybatis.bean.Class中的属性； column 表示表中的列名 -->
            <result property="money" column="money" jdbcType="VARCHAR"/>
        </association>
    </resultMap>
  
  
  
  
 <select id="twosel"  resultMap="userMap" >  
        select u.id,u.name,u.password,u.age,m.money from user as u left join money as m on u.id=m.id
    </select>  
  
  <select id="sele"  resultType="com.you.bean.User">
        select * from `user` where user.name = #{name} and user.password =#{password}
   </select>
  
  
  
   <select id="selectByPrimaryKey" parameterType="int" resultType="com.you.bean.User">
        select * from `user` where user.id = #{id}
   </select>
    <select id="getCount" resultType="java.lang.Integer"  >
        select count(*) from `user` 
   </select>
    <select id="selectLimit" resultType="com.you.bean.User"  >
        select * from `user` limit #{offset},#{limit}
   </select>
   
   <select id="selectAll" resultType="com.you.bean.User">
        select * from `user`
   </select>
   
   <insert id="traninsert" parameterType="com.you.bean.User" >
    insert into user (id, name, password,age)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{age,jdbcType=INTEGER})
  </insert>
   
   
   
   
  <insert id="insert" parameterType="com.you.bean.User" >
    insert into user (id, name, password,age)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{age,jdbcType=INTEGER})
  </insert>
  <!--  批量插入-->
   <insert id="someinsert" parameterType="com.you.bean.User" >
    insert into user (id, name, password,age)
    values 
      <foreach collection="list" item="item" index="index" separator="," >  
        (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{age,jdbcType=INTEGER})
    </foreach>  
  </insert>
  
  <update id="update" parameterType="int" >
    update user set name="22", password="3456",age=45 where id=#{id,jdbcType=INTEGER} 
  </update>
   <update id="update2" parameterType="com.you.bean.User" >
    update user set name=#{name,jdbcType=VARCHAR}, password=#{password,jdbcType=VARCHAR},age=#{age,jdbcType=INTEGER} where id=#{id,jdbcType=INTEGER} 
  </update>
  <delete id="delete" parameterType="int" >
    delete from user where id=#{id} 
  </delete>

   <delete id="somedel" parameterType="int" >
    delete from user where id in 
    <foreach item="arr" collection="array" open="(" separator="," close=")">
		#{arr}
	</foreach>
  </delete>
   <!--
  <insert id="insertSelective" parameterType="test.domain.User" >
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="age != null" >
        age,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="age != null" >
        #{age,jdbcType=INTEGER},
      </if>
    </trim>
  </insert> -->
</mapper>